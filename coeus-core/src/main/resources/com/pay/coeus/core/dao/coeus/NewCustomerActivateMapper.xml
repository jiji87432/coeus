<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.pay.coeus.core.dao.coeus.NewCustomerActivateMapper">
	<resultMap id="BaseResultMap" type="com.pay.coeus.model.entity.NewCustomerActivate">
        <result property="id" column="ID"/>
        <result property="optimistic" column="OPTIMISTIC"/>
        <result property="customerNo" column="CUSTOMER_NO"/>
        <result property="customerName" column="CUSTOMER_NAME"/>
        <result property="customerStatus" column="CUSTOMER_STATUS"/>
        <result property="customerLevel" column="CUSTOMER_LEVEL"/>
        <result property="customerCheckInfo" column="CUSTOMER_CHECK_INFO"/>
        <result property="bindTime" column="BIND_TIME"/>
        <result property="activateTime" column="ACTIVATE_TIME"/>
        <result property="resultType" column="RESULT_TYPE"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="linkMan" column="LINK_MAN"/>
        <result property="isTrans" column="IS_TRANS"/>
        <result property="transTime" column="TRANS_TIME"/>
        <result property="updateTime" column="UPDATE_TIME"/>
        <result property="posCount" column="POS_COUNT"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		ID,OPTIMISTIC,CUSTOMER_NO,CUSTOMER_NAME,CUSTOMER_STATUS,CUSTOMER_LEVEL, CUSTOMER_CHECK_INFO, BIND_TIME, ACTIVATE_TIME, RESULT_TYPE, CREATE_TIME,LINK_MAN,IS_TRANS,TRANS_TIME,UPDATE_TIME,POS_COUNT
	</sql>
	
	<insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">  
	    insert into new_customer_activate (
	    	OPTIMISTIC,
	    	CUSTOMER_NO,
	    	CUSTOMER_NAME,
	    	CUSTOMER_STATUS,
	    	CUSTOMER_LEVEL, 
	    	CUSTOMER_CHECK_INFO,
	    	BIND_TIME, 
	    	ACTIVATE_TIME, 
	    	RESULT_TYPE, 
	    	LINK_MAN,
	    	POS_COUNT,
	    	UPDATE_TIME,
	    	CREATE_TIME)   
	    values 
	    <foreach collection="customerList" item="item" index="index" separator="," >  
	        (0,
        	#{item.customerNo},
        	#{item.customerName},
        	#{item.customerStatus},
        	#{item.customerLevel},
        	#{item.customerCheckInfo},
        	#{item.bindTime},
        	#{item.activateTime},
        	#{item.resultType},
        	#{item.linkMan},
        	#{item.posCount},
        	sysdate(),
        	sysdate())  
	    </foreach>  
	</insert>  
	
	<select id="findAllList"  resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM new_customer_activate
		<where>
			<if test="param.customerStatus != null and param.customerStatus != ''">
				AND CUSTOMER_STATUS =  #{param.customerStatus}
			</if>
			<if test="param.customerLevel != null and param.customerLevel != ''">
				<if test="param.customerLevel == 'null'">
					AND CUSTOMER_LEVEL is null
				</if>
				<if test="param.customerLevel != 'null'">
					AND CUSTOMER_LEVEL =  #{param.customerLevel}
				</if>
			</if>
			<if test="param.resultType != null and param.resultType != ''">
				AND RESULT_TYPE =  #{param.resultType}
			</if>
			
			<if test="param.customerCheckInfo != null and param.customerCheckInfo != ''">
				AND CUSTOMER_CHECK_INFO =  #{param.customerCheckInfo}
			</if>
			<if test="param.hasPos != null and param.hasPos != ''">
				<if test='param.hasPos == "Y"'>
					AND POS_COUNT IS NOT NULL AND POS_COUNT > 0
				</if>
				<if test='param.hasPos == "N"'>
					AND (POS_COUNT IS NULL OR POS_COUNT = 0)
				</if>
			</if>
			<if test="param.createTimeStart != null and param.createTimeStart != ''">
				AND CREATE_TIME >=  #{param.createTimeStart}
			</if>
			<if test="param.createTimeEnd != null and param.createTimeEnd != ''">
				AND CREATE_TIME
				 <![CDATA[
					<
				]]>
				#{param.createTimeEnd}
			</if>
			<if test="param.updateTimeStart != null and param.updateTimeStart != ''">
				AND UPDATE_TIME >=  #{param.updateTimeStart}
			</if>
			<if test="param.updateTimeEnd != null and param.updateTimeEnd != ''">
				AND UPDATE_TIME
				 <![CDATA[
					<
				]]>
				#{param.updateTimeEnd}
			</if>
			<if test="param.isTrans != null and param.isTrans != ''">
				<if test="param.isTrans == 'null' ">
					AND IS_TRANS is null
				</if>
				<if test="param.isTrans != 'null' ">
					AND IS_TRANS =  #{param.isTrans}
				</if>
			</if>
			<if test="param.transTimeStart != null and param.transTimeStart != ''">
				AND TRANS_TIME >=  #{param.transTimeStart}
			</if>
			<if test="param.transTimeEnd != null and param.transTimeEnd != ''">
				AND TRANS_TIME
				 <![CDATA[
					<
				]]>
				#{param.transTimeEnd}
			</if>
		</where>
		order by CREATE_TIME desc
	</select>
	
	<select id="findCustomerByDay" resultType="java.lang.String" parameterType="java.lang.Integer"   >
		select customer_no 
		from coeus.new_customer_activate a 
		WHERE 
		a.create_time >= date_sub(curdate() ,interval #{day} day) 
		and a.create_time <![CDATA[
					<
				]]> date_sub(curdate() ,interval #{day}-1 day)
		and a.is_trans is null
		LIMIT #{number},#{pageLimit}
	</select>
	
	<update id="updateNewCustomerActivateTrans" parameterType="java.lang.Integer">
        update coeus.new_customer_activate a  set a.trans_time = 
        case 
        <foreach collection="list" item="item" index="index">
            when a.customer_no=#{item.customerNo,jdbcType=VARCHAR} then #{item.transTime}
        </foreach>
         end,
         a.optimistic=a.optimistic+1, a.is_trans='Y', a.update_time=sysdate()
        where a.create_time >= date_sub(curdate() ,interval ${day} day) 
		and a.create_time <![CDATA[
					<
				]]> date_sub(curdate() ,interval ${day}-1 day)
		and a.is_trans is null and a.customer_no in 
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.customerNo,jdbcType=VARCHAR}
        </foreach>
    </update>
	
</mapper>
